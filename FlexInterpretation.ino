// due to the fact that variably sized arrays cannot be variably modified, 
// number of fingers was kept as the literal '5', as opposed to a constant
// the flex value at 180 degree acting as a buffer
const unsigned int VALUE_OF_LINE = 180;
// configurations
const unsigned int LETTERS_IN_ALPHABET = 26;

//int a[][5] = {
//  {0,10,10,10,10}, // 'a'
//  {10,0,0,0,0}, // 'b'
//  {5,5,5,5,5}, // 'c' SIMILAR TO 'o'
//  {10,0,10,10,10}, // 'd' SIMILAR TO 'z'
//  {10,8,8,8,8}, // 'e' SIMILAR TO 'm', 'n', 's'
//  {5,7,0,0,0}, // 'f'
//  {0,0,10,10,10}, // 'g' SIMILAR TO 'l'
//  {5,0,0,8,8}, // 'h' SIMILAR TO 'u'
//  {10,10,10,10,0}, // 'i' SIMILAR TO 'j'
//  {10,10,10,10,3}, // 'j' SIMILAR TO 'i'
//  {0,0,5,10,10}, // 'k' SIMILAR TO q
//  {0,0,9,9,9}, // 'l' SIMILAR TO 'g'
//  {10,8,6,6,6}, // 'm' SIMILAR TO 'e', 'n', 's'
//  {10,8,8,10,10}, // 'n' SIMILAR TO 'e', 'm', 's'
//  {8,7,7,7,7}, // 'o' SIMILAR TO 'o'
//  {0,0,3,10,10}, // 'p' SIMILAR to 
//  {0,3,10,10,10}, // 'q' SIMILAR TO 'k'
//  {8,1,3,7,9}, // 'r'
//  {10,10,10,10,10}, // 's' SIMILAR TO 'e', 'm', 'n'
//  {0,6,10,10,10}, // 't'
//  {7,0,0,7,7}, // 'u' SIMILAR TO 'v'
//  {7,2,2,7,7}, // 'v' SIMILAR TO 'u'
//  {7,0,0,0,7}, // 'w'
//  {10,5,10,10,10}, // 'x'
//  {0,10,10,10,0}, // 'y'
//  {7,0,10,10,10} // 'z' SIMILAR TO 'd'
//};

/********************************************************************
 *                                                                  *
 *                           DATASET # 1                            *
 *                                                                  *
 ********************************************************************/
//int a[][5] = {
//  {
//    4,9,10,10,10  }
//  , // 'a'
//  {
//    9,2,3,0,0  }
//  , // 'b'
//  {
//    8,6,7,9,7  }
//  , // 'c'
//  {
//    8,2,9,10,10  }
//  , // 'd'
//  {
//    9,9,10,10,10  }
//  , // 'e'
//  {
//    9,7,3,0,0  }
//  , // 'f'
//  {
//    4,3,9,10,10  }
//  , // 'g'
//  {
//    8,2,2,10,10  }
//  , // 'h'
//  {
//    9,7,10,10,2  }
//  , // 'i'
//  {
//    9,7,10,10,3  }
//  , // 'j'
//  {
//    4,6,8,10,10  }
//  , // 'k'
//  {
//    0,2,9,10,10  }
//  , // 'l'
//  {
//    6,8,9,10,10  }
//  , // 'm'
//  {
//    9,8,9,10,10  }
//  , // 'n'
//  {
//    9,7,9,10,10  }
//  , // 'o'
//  {
//    7,1,9,10,10  }
//  , // 'p'
//  {
//    4,5,9,10,10  }
//  , // 'q'
//  {
//    9,6,4,10,10  }
//  , // 'r'
//  {
//    9,9,10,10,10  }
//  , // 's'
//  {
//    8,8,10,10,10  }
//  , // 't'
//  {
//    7,0,0,9,10  }
//  , // 'u'
//  {
//    8,0,0,10,10  }
//  , // 'v'
//  {
//    9,0,2,0,10  }
//  , // 'w'
//  {
//    9,7,10,10,10  }
//  , // 'x'
//  {
//    1,9,8,10,3  }
//  , // 'y'
//  {
//    4,2,9,10,10  }
//  , // 'z'
//};

/********************************************************************
 *                                                                  *
 *                           DATASET # 2                            *
 *                                                                  *
 ********************************************************************/
 
//int a[][5] = {
//  {27,97,100,100,100}, // 'a'
//  {90,25,33,16,1}, // 'b'
//  {80,60,65,71,49}, // 'c'
//  {69,30,96,100,100}, // 'd'
//  {92,97,100,100,100}, // 'e'
//  {71,93,31,9,11}, // 'f'
//  {35,47,97,100,100}, // 'g'
//  {82,39,29,100,100}, // 'h'
//  {91,98,100,100,35}, // 'i'
//  {88,98,100,100,49}, // 'j'
//  {33,27,62,100,100}, // 'k'
//  {8,44,97,100,100}, // 'l'
//  {94,90,95,97,100}, // 'm'
//  {84,88,90,100,100}, // 'n'
//  {92,89,95,100,100}, // 'o'
//  {62,41,93,100,100}, // 'p'
//  {28,53,97,100,100}, // 'q'
//  {76,49,25,99,99}, // 'r'
//  {94,100,100,100,100}, // 's'
//  {84,100,100,100,100}, // 't'
//  {86,15,11,100,100}, // 'u'
//  {80,18,29,100,100}, // 'v'
//  {84,24,36,0,100}, // 'w'
//  {89,71,100,100,100}, // 'x'
//  {-4,92,99,100,32}, // 'y'
//  {16,41,98,100,100} // 'z'
//};

/********************************************************************
 *                                                                  *
 *                           DATASET # 3                            *
 *                                                                  *
 ********************************************************************/
int a[][5] = {
  {30,99,98,97,95}, // 'a'
  {60,20,15,10,5}, // 'b'
  {60,72,71,72,48}, // 'c'
  {65,15,84,84,79}, // 'd'
  {83,100,95,90,83}, // 'e'
  {60,88,30,23,17}, // 'f'
  {22,30,96,93,88}, // 'g'
  {64,23,26,87,80}, // 'h'
  {70,100,99,88,13}, // 'i'
  {70,100,98,87,35}, // 'j'
  {15,30,40,75,60}, // 'k'
  {0,0,86,81,88}, // 'l'
  {76,90,87,87,85}, // 'm'
  {60,90,83,82,85}, // 'n'
  {70,80,80,71,64}, // 'o'
  {10,10,65,75,82}, // 'p'
  {14,30,82,78,82}, // 'q'
  {67,18,25,83,71}, // 'r'
  {72,100,96,93,93}, // 's'
  {61,100,96,93,93}, // 't'
  {70,5,6,77,68}, // 'u'
  {59,0,2,79,68}, // 'v'
  {68,25,20,16,76}, // 'w'
  {74,54,97,95,97}, // 'x'
  {2,76,82,63,4}, // 'y'
  {8,25,83,76,65} // 'z'
};

char translate(int f[]){
  char interpretation;
  int mindiff = -1;
  for(int i = 0; i < LETTERS_IN_ALPHABET; ++i){
    int epsilon = 0;
    for(int j = 0; j < 5; ++j){
      //      epsilon += (a[i][j] - f[j] >= 0) ? a[i][j] - f[j] : f[j] - a[i][j];
      epsilon += (a[i][j] - f[j]) * (a[i][j] - f[j]);
    }
    if(mindiff == -1 || mindiff > epsilon){
      mindiff = epsilon;
      interpretation  = 'a' + i;
    }
  }
  return interpretation;
}

